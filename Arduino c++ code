
#include "DHTStable.h"
#define sensorPower 7
#define sensorPin A1
#define mister_one 2
#define mister_two 3
#define mister_three 4
#define mister_four 5
#include<Wire.h>
#include <LiquidCrystal_I2C.h>
//I2C pins declaration
LiquidCrystal_I2C lcd(0x27, 2, 1, 0, 4, 5, 6, 7, 3, POSITIVE); 
//idk what the POSITIVE
/ POSITIVE is the polarity of the LCD, meaning the backlight is active HIGH

// Value for storing water level
int val = 0;
DHTStable DHT;

#define DHT11_PIN   6


void setup()
{
   Serial.begin(115200);

   lcd.begin(16,2);//Defining 16 columns and 2 rows of lcd display
   lcd.backlight();//To Power ON the back light


   // Set misters pins as OUTPUT
  pinMode(mister_one,OUTPUT);
  pinMode(mister_two,OUTPUT);
  pinMode(mister_three,OUTPUT);
  pinMode(mister_four,OUTPUT);


   // Print file name and library version
  Serial.println(__FILE__);
  Serial.print("LIBRARY VERSION: ");
  Serial.println(DHTSTABLE_LIB_VERSION);
  Serial.println();
  Serial.println("Type,\tstatus,\tHumidity (%),\tTemperature (C)");

// Set sensor power pin as OUTPUT
  pinMode(sensorPower, OUTPUT);
  
  // Set to LOW so no power flows through the sensor
  digitalWrite(sensorPower, LOW);
  

}


void loop()
{
// Read water level sensor
  //get the reading from the function below and print it
  int level = readSensor();
  
  Serial.print("Water level: ");
  Serial.println(level);
  
  int pHsensorvalue = analogRead(A0);
  float pHvolt = pHsensorvalue*(5.0/1024);
  float pH = -5.6*pHvolt + 21.188; //equation from datasheet
  Serial.print("pH voltage | pH amount:"); 
  Serial.print(pHvolt); // prints ph level
  Serial.print(" | ");
  Serial.println(pH);
  delay(2000);


  // Read DHT11 sensor data
  Serial.print("Hum, \t");
  int chk = DHT.read11(DHT11_PIN);
  switch (chk)
  {
    case DHTLIB_OK:  
      Serial.print("Temp,\t"); 
      break;
    case DHTLIB_ERROR_CHECKSUM: 
      Serial.print("Checksum error,\t"); 
      break;
    case DHTLIB_ERROR_TIMEOUT: 
      Serial.print("Time out error,\t"); 
      break;
    default: 
      Serial.print("Unknown error,\t"); 
      break;
  }
   // Print humidity and temperature
  Serial.print(DHT.getHumidity(), 1);
  Serial.print(",\t");
  Serial.println(DHT.getTemperature(), 1);

// Control misters based on humidity
if(DHT.getHumidity() <80){
  digitalWrite(mister_one,LOW);
  digitalWrite(mister_two,LOW);
  digitalWrite(mister_three,LOW);
  digitalWrite(mister_four,LOW);  

}else
{
  digitalWrite(mister_one,HIGH);
  digitalWrite(mister_two,HIGH);
  digitalWrite(mister_three,HIGH);
  digitalWrite(mister_four,HIGH);
}

// Prepare data for LCD display
String dataOutputs[] = {
    "Water level: " + String(level),
    "pH voltage: " + String(pHvolt),
    "pH amount: " + String(pH),
    "Temperature: " + String(DHT.getTemperature(), 1) + " C",
    "Humidity: " + String(DHT.getHumidity(), 1) + " %",

}

  // Display data on LCD
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print(dataOutputs[0]);
  lcd.setCursor(0, 1);
  lcd.print(dataOutputs[1]);
  delay(2000); // Wait for 2 seconds

 // Display next set of data on LCD
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print(dataOutputs[2]);
  lcd.setCursor(0, 1);
  lcd.print(dataOutputs[3]);
  delay(2000); // Wait for 2 seconds


// Display remaining data on LCD
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print(dataOutputs[3);
  lcd.setCursor(0, 1);
  lcd.print(dataOutputs[4]);
  delay(2000); // Wait for 2 seconds
}


// Function to read water level sensor
int readSensor() {
  digitalWrite(sensorPower, HIGH);  // Turn the sensor ON
  delay(10);              // wait 10 milliseconds
  val = analogRead(sensorPin);    // Read the analog value form sensor
  digitalWrite(sensorPower, LOW);   // Turn the sensor OFF
  return val;             // send current reading
}


