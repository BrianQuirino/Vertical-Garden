#include "DHTStable.h"
#define sensorPower 7
#define sensorPin A1
#define mister_one 2
#define mister_two 3
#define mister_three 4
#define mister_four 5
#include<LiquidCrystal_I2C_Hangul.h>
#include<Wire.h>

LiquidCrystal_I2C_Hangul lcd(0x3F,16,2); 





// Value for storing water level
int val = 0;
DHTStable DHT;

#define DHT11_PIN       6


void setup()
{
  Serial.begin(115200);

  lcd.init();
  lcd.backlight();
  lcd.print("Hello World!");

  pinMode(mister_one,OUTPUT);
  pinMode(mister_two,OUTPUT);
  pinMode(mister_three,OUTPUT);
  pinMode(mister_four,OUTPUT);

  Serial.println(__FILE__);
  Serial.print("LIBRARY VERSION: ");
  Serial.println(DHTSTABLE_LIB_VERSION);
  Serial.println();
  Serial.println("Type,\tstatus,\tHumidity (%),\tTemperature (C)");

  // Set D7 as an OUTPUT
  pinMode(sensorPower, OUTPUT);
  
  // Set to LOW so no power flows through the sensor
  digitalWrite(sensorPower, LOW);
  

}


void loop()
{

  //get the reading from the function below and print it
  int level = readSensor();
  
  Serial.print("Water level: ");
  Serial.println(level);
  
 int pHsensorvalue = analogRead(A0);
  float pHvolt = pHsensorvalue*(5.0/1024);
  float pH = -5.6*pHvolt + 21.188; //equation from datasheet
  Serial.print("pH voltage | pH amount (below)");
  Serial.print(pHvolt);
  Serial.print(" | ");
  Serial.println(pH);
  delay(2000);


  
  // READ DATA
  Serial.print("Hum, \t");
  int chk = DHT.read11(DHT11_PIN);
  switch (chk)
  {
    case DHTLIB_OK:  
      Serial.print("Temp,\t"); 
      break;
    case DHTLIB_ERROR_CHECKSUM: 
      Serial.print("Checksum error,\t"); 
      break;
    case DHTLIB_ERROR_TIMEOUT: 
      Serial.print("Time out error,\t"); 
      break;
    default: 
      Serial.print("Unknown error,\t"); 
      break;
  }
  // DISPLAY DATA
  Serial.print(DHT.getHumidity(), 1);
  Serial.print(",\t");
  Serial.println(DHT.getTemperature(), 1);


if(DHT.getHumidity() <80){
  digitalWrite(mister_one,LOW);
  digitalWrite(mister_two,LOW);
  digitalWrite(mister_three,LOW);
  digitalWrite(mister_four,LOW);  

}else
{
  digitalWrite(mister_one,HIGH);
  digitalWrite(mister_two,HIGH);
  digitalWrite(mister_three,HIGH);
  digitalWrite(mister_four,HIGH);
}


}

//This is a function used to get the reading
int readSensor() {
  digitalWrite(sensorPower, HIGH);  // Turn the sensor ON
  delay(10);              // wait 10 milliseconds
  val = analogRead(sensorPin);    // Read the analog value form sensor
  digitalWrite(sensorPower, LOW);   // Turn the sensor OFF
  return val;             // send current reading
}
